{"ast":null,"code":"var _jsxFileName = \"/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/Jobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Jobs() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [id, setId] = useState(null);\n  const [divDetails, setDivDetails] = useState(null);\n  const divRef = useRef(null);\n  useEffect(() => {\n    if (divRef.current) {\n      divRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [divDetails]);\n  useEffect(() => {\n    fetch('http://localhost:3000/jobs').then(r => r.json()).then(jobs => {\n      setJobs(jobs);\n    });\n  }, []);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (divRef.current && !divRef.current.contains(event.target)) {\n        setId(null);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [divRef]);\n\n  if (jobs === []) {\n    return;\n  } // useEffect(() => {\n  //   const handleClickOutside = (event) => {\n  //     if (divRef.current && !divRef.current.contains(event.target)) {\n  //       setId(null)\n  //     }\n  //   }\n  //   document.addEventListener(\"mousedown\", handleClickOutside)\n  //   return () => {\n  //     document.removeEventListener(\"mousedown\", handleClickOutside)\n  //   }\n  // }, [divRef])\n\n\n  function handleShowDiv(id) {\n    console.log(id);\n    setId(id);\n\n    const divDetail = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Details about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this);\n\n    setDivDetails(divDetail);\n  } // Maping through each job\n\n\n  const job = jobs.map(job => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-card\",\n      onClick: () => handleShowDiv(job.id, job.title, job.description),\n      ref: divRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"job-card-title\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-card-location\",\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-card-company\",\n          children: \"Acme Inc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-card-description\",\n          children: [job.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-card-date\",\n          children: \"Posted 3 days ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"job-card-apply-btn\",\n          children: \"Apply Now /  Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  });\n  console.log(jobs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: id !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card-container\",\n        children: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-details-container\",\n        ref: divRef,\n        children: [divDetails, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: job\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n\n_s(Jobs, \"9YDMVGvSgVqV/z+nYwWWVEYxiLs=\");\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/Jobs.js"],"names":["React","useRef","useState","useEffect","Jobs","jobs","setJobs","id","setId","divDetails","setDivDetails","divRef","current","scrollIntoView","behavior","fetch","then","r","json","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","handleShowDiv","console","log","divDetail","job","map","title","description","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMS,MAAM,GAAGV,MAAM,CAAC,IAAD,CAArB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,CAACC,OAAX,EAAoB;AAClBD,MAAAA,MAAM,CAACC,OAAP,CAAeC,cAAf,CAA8B;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA9B;AACD;AACF,GAJQ,EAIN,CAACL,UAAD,CAJM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACOC,CAAD,IAAMA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOX,IAAD,IAAQ;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;AAOAF,EAAAA,SAAS,CAAC,MAAM;AACd,aAASgB,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIT,MAAM,CAACC,OAAP,IAAkB,CAACD,MAAM,CAACC,OAAP,CAAeS,QAAf,CAAwBD,KAAK,CAACE,MAA9B,CAAvB,EAA8D;AAC5Dd,QAAAA,KAAK,CAAC,IAAD,CAAL;AACD;AACF;;AACDe,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,kBAAvC;AACA,WAAO,MAAM;AACXI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CN,kBAA1C;AACD,KAFD;AAGD,GAVQ,EAUN,CAACR,MAAD,CAVM,CAAT;;AAWA,MAAIN,IAAI,KAAK,EAAb,EAAgB;AACd;AACD,GA/BW,CAgCZ;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AACJ,WAASqB,aAAT,CAAuBnB,EAAvB,EAA0B;AACpBoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,EAAZ;AACAC,IAAAA,KAAK,CAACD,EAAD,CAAL;;AAEF,UAAMsB,SAAS,gBAAG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BAEhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFgB;AAAA;AAAA;AAAA;AAAA,YAAlB;;AAMJnB,IAAAA,aAAa,CAACmB,SAAD,CAAb;AACK,GAxDW,CA0DZ;;;AACA,QAAMC,GAAG,GAAGzB,IAAI,CAAC0B,GAAL,CAAUD,GAAD,IAAO;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAuC,MAAA,OAAO,EAAE,MAAIJ,aAAa,CAACI,GAAG,CAACvB,EAAL,EAAQuB,GAAG,CAACE,KAAZ,EAAkBF,GAAG,CAACG,WAAtB,CAAjE;AAAsG,MAAA,GAAG,EAAEtB,MAA3G;AAAA,8BACN;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgCmB,GAAG,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBAAkCF,GAAG,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAKN;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAA,qBAAqCJ,GAAG,CAACG,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALM,eASN;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATM;AAAA,OAA+BH,GAAG,CAACvB,EAAnC;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBW,CAAZ;AAmBAoB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AAGF,sBACE;AAAA,cACCE,EAAE,KAAK,IAAP,gBACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBAAqCuB;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,GAAG,EAAEnB,MAA5C;AAAA,mBAAqDF,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAIc;AAAA,gBAAMqB;AAAN;AAAA;AAAA;AAAA;AAAA;AALf,mBADF;AAcD;;GA/FQ1B,I;;KAAAA,I;AAiGT,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useEffect } from 'react'\n\nfunction Jobs() {\n    const [jobs, setJobs] = useState([])\n    const [id, setId] = useState(null)\n    const [divDetails, setDivDetails] = useState(null)\n    const divRef = useRef(null)\n\n    useEffect(() => {\n      if (divRef.current) {\n        divRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    }, [divDetails]);\n    useEffect(()=>{\n      fetch('http://localhost:3000/jobs')\n      .then((r)=> r.json())\n      .then((jobs)=>{\n          setJobs(jobs)\n      })\n    },[])\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (divRef.current && !divRef.current.contains(event.target)) {\n          setId(null);\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [divRef]);\n    if (jobs === []){\n      return\n    }\n    // useEffect(() => {\n    //   const handleClickOutside = (event) => {\n    //     if (divRef.current && !divRef.current.contains(event.target)) {\n    //       setId(null)\n    //     }\n    //   }\n    \n    //   document.addEventListener(\"mousedown\", handleClickOutside)\n    \n    //   return () => {\n    //     document.removeEventListener(\"mousedown\", handleClickOutside)\n    //   }\n    // }, [divRef])\nfunction handleShowDiv(id){\n      console.log(id)\n      setId(id)\n\n    const divDetail = <div className='job-details-div'>\n\n      <h1>All Details about</h1>\n    </div>;\n     \n    \nsetDivDetails(divDetail)\n    }\n    \n    // Maping through each job\n    const job = jobs.map((job)=>{\n      return (\n        <div className=\"job-card\" key={job.id} onClick={()=>handleShowDiv(job.id,job.title,job.description)}  ref={divRef}>\n  <div className=\"job-card-header\">\n    <h2 className=\"job-card-title\">{job.title}</h2>\n    <p className=\"job-card-location\">{job.location}</p>\n  </div>\n  <div className=\"job-card-body\">\n    <p className=\"job-card-company\">Acme Inc.</p>\n    <p className=\"job-card-description\">{job.description} </p>\n  </div>\n  <div className=\"job-card-footer\">\n    <p className=\"job-card-date\">Posted 3 days ago</p>\n    <button className=\"job-card-apply-btn\">Apply Now /  Details</button>\n  </div>\n</div>\n\n      )\n    }) \n    console.log(jobs)\n\n \n  return (\n    <>\n    {id !== null ? (\n        <div className='jobs-container'>\n          <div className='job-card-container'>{job}</div>\n          <div className='job-details-container' ref={divRef}>{divDetails} </div>\n        </div>) : (<div>{job}</div>)}\n    {/* <div >\n     \n{job}\n\n    </div> */}\n    </>\n  )\n}\n\nexport default Jobs"]},"metadata":{},"sourceType":"module"}