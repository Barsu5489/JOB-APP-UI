{"ast":null,"code":"var _jsxFileName = \"/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/MyJobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyJobs() {\n  _s();\n\n  const redirect = useNavigate();\n  const userId = localStorage.getItem('userId'); // const [jobId, setJobId] = useState(null)\n\n  const [jobs, setjob] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [editingDescription, setEditingDescription] = useState(''); // console.log(jobId)\n\n  console.log(userId);\n\n  function handleDelete(id) {\n    fetch(`/jobs`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        setjob(jobs.filter(job => job.id !== id));\n      }\n    });\n  }\n\n  function handleEdit(id) {\n    setEditingId(id);\n    setEditingTitle(jobs.find(job => job.id === id).title);\n    setEditingDescription(jobs.find(job => job.id === id).description);\n  }\n\n  function handleSave(id, title, description) {\n    fetch(`/jobs/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    }).then(res => {\n      if (res.ok) {\n        setEditingId(null);\n        setjob(jobs.map(job => job.id === id ? { ...job,\n          title,\n          description\n        } : job));\n      }\n    });\n  }\n\n  useEffect(() => {\n    fetch(`/users/${userId}`).then(res => res.json().then(data => {\n      console.log(data);\n      console.log(data.jobs);\n      return setjob(data.jobs);\n    }));\n  }, []);\n  const userjob = jobs.map(job => {\n    const jobTime = new Date(job.created_at);\n    const month = jobTime.toLocaleString('default', {\n      month: 'long'\n    });\n    const day = jobTime.getDate();\n    const year = jobTime.getFullYear();\n    const timeString = `${month} ${day} ${year}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job__header\",\n        children: [editingId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"job__title\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"job__title\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job__date\",\n          children: timeString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), editingId === job.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"job__description\",\n        value: editingDescription,\n        onChange: e => setEditingDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job__description\",\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job__footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"job__skills\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"job__skill\",\n            children: \"work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"job__skill\",\n            children: \"focus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__buttons\",\n          children: [editingId === job.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"job__button job__button--\\nsave\",\n            onClick: () => handleSave(job.id, editingTitle, editingDescription),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(job.id),\n            className: \"job__button job__button--edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(job.id),\n            className: \"job__button job__button--delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-page\",\n      children: userjob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MyJobs, \"CXMBVVbMXqWUyLe5edMH62JEboI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyJobs;\nexport default MyJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyJobs\");","map":{"version":3,"sources":["/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/MyJobs.js"],"names":["React","useEffect","useState","useNavigate","MyJobs","redirect","userId","localStorage","getItem","jobs","setjob","editingId","setEditingId","editingTitle","setEditingTitle","editingDescription","setEditingDescription","console","log","handleDelete","id","fetch","method","headers","then","res","ok","filter","job","handleEdit","find","title","description","handleSave","body","JSON","stringify","map","json","data","userjob","jobTime","Date","created_at","month","toLocaleString","day","getDate","year","getFullYear","timeString","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nfunction MyJobs() {\n    \n  const redirect = useNavigate() \n  const userId = localStorage.getItem('userId');\n  // const [jobId, setJobId] = useState(null)\n  const [jobs, setjob] = useState([])\n  const [editingId, setEditingId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [editingDescription, setEditingDescription] = useState('');\n// console.log(jobId)\nconsole.log(userId)\n  function handleDelete(id) {\n    fetch(`/jobs`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => {\n      if (res.ok) {\n        setjob(jobs.filter(job => job.id !== id))\n      }\n    })\n  }\n\n  function handleEdit(id) {\n      setEditingId(id);\n      setEditingTitle(jobs.find(job => job.id === id).title);\n      setEditingDescription(jobs.find(job => job.id === id).description);\n  }\n\n  function handleSave(id, title, description) {\n    fetch(`/jobs/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ title, description })\n    }).then((res) => {\n      if (res.ok) {\n        setEditingId(null);\n        setjob(jobs.map(job => job.id === id ? { ...job, title, description } : job))\n      }\n    })\n  }\n\n  useEffect(() => {\n    fetch(`/users/${userId}`)\n      .then(res => res.json()\n        .then(data => {\n            console.log(data)\n            console.log(data.jobs)\n\n          return setjob(data.jobs)\n        }\n        ))\n  }, [])\n\n\n  const userjob = jobs.map((job) => {\n    const jobTime = new Date(job.created_at)\n    const month = jobTime.toLocaleString('default', { month: 'long' })\n    const day = jobTime.getDate()\n    const year = jobTime.getFullYear();\n    const timeString = `${month} ${day} ${year}`\n    return (\n      <div className=\"job\" key={job.id}>\n        <div className=\"job__header\">\n          {editingId === job.id ? (\n            <input className=\"job__title\" value={editingTitle} onChange={(e) => setEditingTitle(e.target.value)} />\n          ) : (\n            <h2 className=\"job__title\">{job.title}</h2>\n          )}\n          <p className=\"job__date\">{timeString}</p>\n        </div>\n        {/* <img src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NDV8fHBvcnRmb2xpb3xlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60\" alt=\"missing\" srcSet=\"\" className='jobImg'/> */}\n        {editingId === job.id ? (\n          <textarea className=\"job__description\" value={editingDescription} onChange={(e) => setEditingDescription(e.target.value)}></textarea>\n        ) : (\n          <p className=\"job__description\">{job.description}</p>\n        )}\n        <div className=\"job__footer\">\n          <ul className=\"job__skills\">\n            {/* <li className=\"job__skill\"><a href=\"#\">{job.repo_url}</a></li> */}\n            <li className=\"job__skill\">work</li>\n            <li className=\"job__skill\">focus</li>\n          </ul>\n          <div className=\"job__buttons\">\n            {editingId === job.id ? (\n              <button className=\"job__button job__button--\nsave\" onClick={() => handleSave(job.id, editingTitle, editingDescription)}>Save</button>\n            ) : (\n              <button onClick={() =>\nhandleEdit(job.id)} className=\"job__button job__button--edit\">Edit</button>\n            )}\n            <button onClick={() => handleDelete(job.id)} className=\"job__button job__button--delete\">Delete</button>\n          </div>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <>\n      <div className=\"job-page\">\n        {/* <h1 className=\"job-page__title\">My jobs  <span><button className='addjob'\n        onClick={()=>redirect('/addjob')}\n        >Add job</button></span></h1> */}\n\n  \n\n{userjob}\n</div>\n\n\n</>\n  )\n}\n\nexport default MyJobs\n\n"]},"metadata":{},"sourceType":"module"}