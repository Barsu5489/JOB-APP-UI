{"ast":null,"code":"var _jsxFileName = \"/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/PostJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostJob() {\n  _s();\n\n  const userId = localStorage.getItem('userId');\n  const redirect = useNavigate();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [location, setLocation] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/jobs`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        location: location\n      })\n    }).then(res => {\n      if (res.ok) {\n        redirect('/jobs');\n        return res.json();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addProject-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          className: \"form-control\",\n          id: \"\",\n          placeholder: \"Enter title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          name: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          name: \"location\",\n          className: \"form-control\",\n          placeholder: \"project Url\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostJob, \"ksBETK2RmaSd0hCfOOp+G57cDXA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PostJob;\nexport default PostJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"sources":["/home/barsu/Development/code/phase4/phase4_Project/Rails-Project/client/src/components/PostJob.js"],"names":["React","useState","useNavigate","PostJob","userId","localStorage","getItem","redirect","title","setTitle","description","setDescription","location","setLocation","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nfunction PostJob() {\n    const userId = localStorage.getItem('userId');\n    const redirect = useNavigate()\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [location, setLocation] = useState('')\n    \n\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        fetch(`http://localhost:3000/jobs`,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            }, \n             body: JSON.stringify({\n                title:title,\n                description:description,\n                location:location\n            })\n        }).then((res)=>{\n            if(res.ok){\n               \n                redirect('/jobs')\n                return res.json()\n            }\n        })\n    }\n\n  return (\n    <div className=\"addProject-form\">\n        <h2>Post Job</h2>\n                <form action=\"\" method=\"post\"  onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n            <label>Title</label>\n        <input type=\"text\" name=\"title\" className=\"form-control\"  id=\"\" placeholder='Enter title' value={title} onChange={e=>setTitle(e.target.value)}/>\n        </div>\n        <div className=\"form-group\">\n            <label>Description</label>\n            <textarea className=\"form-control\" name='description' value={description} onChange={(e) => setDescription(e.target.value)} required ></textarea>\n            \n        </div>\n        <div className=\"form-group\">\n            <label>Location</label>\n            <input type=\"name\" name=\"location\" className=\"form-control\"  placeholder=\"project Url\"  value={location} onChange={(e)=>setLocation(e.target.value)} required/>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Add Project</button>\n        {/* <div className=\"forgot-password\">\n        <span><p>Already have an account?</p></span> <p> <span onClick={()=>redirect('/auth')}>Login!</span></p>\n    </div> */}\n        {/* <p style={{color:'red'}}>{error}</p> */}\n        </form>\n    </div>\n  )\n}\n\nexport default PostJob"]},"metadata":{},"sourceType":"module"}